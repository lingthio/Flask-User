Request for Flask Extension Approval

0. An approved Flask extension requires a maintainer.

   Maintainer: Ling Thio <ling.thio@gmail.com>
   Repository: https://github.com/lingthio/flask-user

1. An approved Flask extension must provide exactly one package or module named flask_extensionname.

   Module: flask_user

2. It must ship a testing suite that can either be invoked with make test or python setup.py test.

   python setup.py test works in a brand new virtualenv

3. APIs of approved extensions will be checked for the following characteristics:
   an approved extension has to support multiple applications running in the same Python process.
   it must be possible to use the factory pattern for creating applications.

   UserManager.__init__(app=None) sets self.app = app
   UserManager.init_app(app)      does NOT set self.app

4. The license must be BSD/MIT/WTFPL licensed.

   BSD License

5. The naming scheme for official extensions is Flask-ExtensionName or ExtensionName-Flask.

   Extension name: Flask-User

6. Approved extensions must define all their dependencies in the setup.py file

    setup.py:
        install_requires=[
            'passlib', 'bcrypt', 'pycrypto',
            'Flask', 'Flask-Babel', 'Flask-Login', 'Flask-Mail',
            'Flask-SQLAlchemy', 'Flask-WTF'],

7. The extension must have documentation that uses one of the two Flask themes for Sphinx documentation.

   See http://pythonhosted.org//Flask-User/

8. The setup.py description (and thus the PyPI description) has to link to...

   The documentation: http://pythonhosted.org//Flask-User/
   Home page: https://github.com/lingthio/flask-user
   Bug track: https://github.com/lingthio/flask-user/issues
   Development version: n/a

9. The zip_safe flag in the setup script must be set to False

    setup.py:
        zip_safe=False,

10. An extension currently has to support Python 2.6 as well as Python 2.7

    Flask-Utils runs on Python 2.6, 2.7 and 3.3

